{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport * as actions from \"../actionTypes\";\nimport { RegistationSuccess, RegistationError } from \"../actions\";\nimport axios from \"axios\";\nexport default function* registrationSaga(action) {\n  try {\n    let email = action.payload.email;\n    let name = action.payload.username;\n    let password = action.payload.password; // let option = action.payload.option;\n    // yield put(RegistationRequest);\n\n    const response = yield call(axios.post, ` http://176.9.137.77:8024/auth/register/`, {\n      email,\n      name,\n      password,\n      password2: password\n    }); // yield put(RegistationRequest({ isLoading: true }));\n\n    const data = response.data;\n\n    if (data.error === 0) {\n      yield put(RegistationSuccess({\n        registation: true,\n        response: data\n      }));\n    } else {\n      yield put(RegistationError({\n        registation: false,\n        error: data\n      }));\n    }\n  } catch (error) {\n    yield put(RegistationError({\n      registation: false,\n      error: error\n    }));\n  }\n}\nexport function* registrationRequest() {\n  yield takeLatest(actions.Registation_Request, registrationSaga);\n}","map":{"version":3,"sources":["/home/etech/clients/pythonreacttest/src/redux/saga/registration.js"],"names":["takeLatest","put","call","actions","RegistationSuccess","RegistationError","axios","registrationSaga","action","email","payload","name","username","password","response","post","password2","data","error","registation","registrationRequest","Registation_Request"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AAEA,SACEC,kBADF,EAEEC,gBAFF,QAGO,YAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,UAAUC,gBAAV,CAA2BC,MAA3B,EAAmC;AAChD,MAAI;AACF,QAAIC,KAAK,GAACD,MAAM,CAACE,OAAP,CAAeD,KAAzB;AACA,QAAIE,IAAI,GAAGH,MAAM,CAACE,OAAP,CAAeE,QAA1B;AACA,QAAIC,QAAQ,GAAGL,MAAM,CAACE,OAAP,CAAeG,QAA9B,CAHE,CAIF;AAEA;;AACA,UAAMC,QAAQ,GAAG,MAAMZ,IAAI,CACzBI,KAAK,CAACS,IADmB,EAExB,0CAFwB,EAEkB;AACzCN,MAAAA,KADyC;AAEzCE,MAAAA,IAFyC;AAGzCE,MAAAA,QAHyC;AAIzCG,MAAAA,SAAS,EAACH;AAJ+B,KAFlB,CAA3B,CAPE,CAgBF;;AACA,UAAMI,IAAI,GAAGH,QAAQ,CAACG,IAAtB;;AAEA,QAAIA,IAAI,CAACC,KAAL,KAAe,CAAnB,EAAsB;AACpB,YAAMjB,GAAG,CAACG,kBAAkB,CAAC;AAAEe,QAAAA,WAAW,EAAE,IAAf;AAAqBL,QAAAA,QAAQ,EAAEG;AAA/B,OAAD,CAAnB,CAAT;AACD,KAFD,MAEO;AACL,YAAMhB,GAAG,CAACI,gBAAgB,CAAC;AAAEc,QAAAA,WAAW,EAAE,KAAf;AAAsBD,QAAAA,KAAK,EAAED;AAA7B,OAAD,CAAjB,CAAT;AACD;AACF,GAxBD,CAwBE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACI,gBAAgB,CAAC;AAAEc,MAAAA,WAAW,EAAE,KAAf;AAAsBD,MAAAA,KAAK,EAAEA;AAA7B,KAAD,CAAjB,CAAT;AACD;AACF;AAED,OAAO,UAAUE,mBAAV,GAAgC;AACrC,QAAMpB,UAAU,CAACG,OAAO,CAACkB,mBAAT,EAA8Bd,gBAA9B,CAAhB;AACD","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\nimport * as actions from \"../actionTypes\";\n\nimport {\n  RegistationSuccess,\n  RegistationError,\n} from \"../actions\";\nimport axios from \"axios\";\n\nexport default function* registrationSaga(action) {\n  try {\n    let email=action.payload.email\n    let name = action.payload.username;\n    let password = action.payload.password;\n    // let option = action.payload.option;\n\n    // yield put(RegistationRequest);\n    const response = yield call(\n      axios.post,\n      ` http://176.9.137.77:8024/auth/register/`,{\n        email,\n        name,\n        password,\n        password2:password\n      }\n    );\n    // yield put(RegistationRequest({ isLoading: true }));\n    const data = response.data;\n  \n    if (data.error === 0) {\n      yield put(RegistationSuccess({ registation: true, response: data }));\n    } else {\n      yield put(RegistationError({ registation: false, error: data }));\n    }\n  } catch (error) {\n    yield put(RegistationError({ registation: false, error: error }));\n  }\n}\n\nexport function* registrationRequest() {\n  yield takeLatest(actions.Registation_Request, registrationSaga);\n}\n"]},"metadata":{},"sourceType":"module"}