{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { LoginSuccess, LoginError } from \"../actions\";\nimport * as actions from \"../actionTypes\";\nimport axios from \"axios\"; // import jwt from \"jsonwebtoken\";\n\nexport function* loginSaga(action) {\n  try {\n    console.log(action, '===========');\n    let username = action.payload.email;\n    let password = action.payload.password;\n    let response = yield call(axios.get, `https://secure-refuge-14993.herokuapp.com/login?username=${username}&password=${password}`);\n    let data = response.data;\n\n    if (data.error === 0) {\n      localStorage.setItem(\"token\", data.token);\n      let user = 'test';\n      yield put(LoginSuccess({\n        response: {\n          data: data,\n          role: user\n        }\n      }));\n    } else {\n      yield put(LoginError({\n        error: data\n      }));\n    }\n  } catch (error) {\n    yield put(LoginError({\n      error: error\n    }));\n  }\n}\nexport function* loginRequest() {\n  yield takeLatest(actions.Login_Request, loginSaga);\n}","map":{"version":3,"sources":["/home/etech/clients/pythonreacttest/src/redux/saga/login.js"],"names":["takeLatest","put","call","LoginSuccess","LoginError","actions","axios","loginSaga","action","console","log","username","payload","email","password","response","get","data","error","localStorage","setItem","token","user","role","loginRequest","Login_Request"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AAEA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,YAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAO,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AACjC,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,aAAnB;AACF,QAAIG,QAAQ,GAAGH,MAAM,CAACI,OAAP,CAAeC,KAA9B;AACA,QAAIC,QAAQ,GAAGN,MAAM,CAACI,OAAP,CAAeE,QAA9B;AACA,QAAIC,QAAQ,GAAG,MAAMb,IAAI,CACvBI,KAAK,CAACU,GADiB,EAEtB,4DAA2DL,QAAS,aAAYG,QAAS,EAFnE,CAAzB;AAIA,QAAIG,IAAI,GAAGF,QAAQ,CAACE,IAApB;;AACA,QAAIA,IAAI,CAACC,KAAL,KAAe,CAAnB,EAAsB;AACpBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACA,UAAIC,IAAI,GAAG,MAAX;AACA,YAAMrB,GAAG,CAACE,YAAY,CAAC;AAAEY,QAAAA,QAAQ,EAAE;AAAEE,UAAAA,IAAI,EAAEA,IAAR;AAAcM,UAAAA,IAAI,EAACD;AAAnB;AAAZ,OAAD,CAAb,CAAT;AACD,KAJD,MAIO;AACL,YAAMrB,GAAG,CAACG,UAAU,CAAC;AAAEc,QAAAA,KAAK,EAAED;AAAT,OAAD,CAAX,CAAT;AACD;AACF,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACG,UAAU,CAAC;AAAEc,MAAAA,KAAK,EAAEA;AAAT,KAAD,CAAX,CAAT;AACD;AACF;AAED,OAAO,UAAUM,YAAV,GAAyB;AAC9B,QAAMxB,UAAU,CAACK,OAAO,CAACoB,aAAT,EAAwBlB,SAAxB,CAAhB;AACD","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { LoginSuccess, LoginError } from \"../actions\";\nimport * as actions from \"../actionTypes\";\nimport axios from \"axios\";\n// import jwt from \"jsonwebtoken\";\n\nexport function* loginSaga(action) {\n  try {\n      console.log(action,'===========')\n    let username = action.payload.email;\n    let password = action.payload.password;\n    let response = yield call(\n      axios.get,\n      `https://secure-refuge-14993.herokuapp.com/login?username=${username}&password=${password}`\n    );\n    let data = response.data;\n    if (data.error === 0) {\n      localStorage.setItem(\"token\", data.token);\n      let user = 'test';\n      yield put(LoginSuccess({ response: { data: data, role:user } }));\n    } else {\n      yield put(LoginError({ error: data }));\n    }\n  } catch (error) {\n    yield put(LoginError({ error: error }));\n  }\n}\n\nexport function* loginRequest() {\n  yield takeLatest(actions.Login_Request, loginSaga);\n}\n"]},"metadata":{},"sourceType":"module"}